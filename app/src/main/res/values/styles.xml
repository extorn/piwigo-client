<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">

    <style name="App.Widget.EditText.FieldEntry.Clickable" parent="App.Widget.EditText.FieldEntry">
        <item name="android:textColor">@color/clickable_text_color_selector</item>
        <item name="android:inputType">none</item>
        <item name="android:textIsSelectable">false</item>
    </style>

    <style name="App.Widget.EditText.FieldEntry" parent="App.Widget.EditText">
        <!--<item name="android:textColor">?colorPrimaryVariant</item>-->
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">5dp</item>
        <item name="android:layout_marginEnd">5dp</item>
        <item name="android:layout_marginTop">0dp</item>
    </style>

    <style name="App.Widget.NumberPicker.FieldEntry" parent="">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">5dp</item>
        <item name="android:layout_marginEnd">5dp</item>
        <item name="android:layout_marginTop">5dp</item>
        <item name="android:layout_marginBottom">9dp</item>
    </style>

    <!-- this ensure the text in edit text boxes is still visible when they are disabled -->
    <style name="App.Widget.EditText" parent="Widget.AppCompat.EditText">
        <item name="android:textColor">@color/edit_text_color_selector</item>
    </style>

    <style name="App.Widget.Material.TextView" parent="Widget.MaterialComponents.TextView">
        <item name="android:textColor">@color/edit_text_color_selector</item>
    </style>

    <style name="App.Widget.Material.TextView.FieldLabel" parent="Widget.MaterialComponents.TextView">
        <item name="android:textAppearance">?textAppearanceCaption</item>
        <!--<item name="android:textColor">?colorPrimary</item>-->
        <item name="android:layout_marginStart">5dp</item>
        <item name="android:layout_marginEnd">5dp</item>
        <item name="android:layout_marginBottom">3dp</item>
        <item name="android:layout_marginTop">13dp</item>
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
    </style>

    <style name="ThemeOverlay.App.MaterialAlertDialog" parent="Theme.MaterialComponents.Light.Dialog.Alert">
        <!-- Use the edit color scheme (to force it on other themed pages) -->
        <item name="android:theme">@style/ThemeOverlay.App.EditPages</item>
    </style>
    <style name="ThemeOverlay.App.AlertDialog" parent="Theme.MaterialComponents.Light.Dialog.Alert">
        <!-- Use the edit color scheme (to force it on other themed pages) -->
        <item name="android:theme">@style/ThemeOverlay.App.EditPages</item>
    </style>


    <!-- this has the checkbox pushed to the end of the field -->
    <style name="Widget.MaterialComponents.CompoundButton.CheckBox.EditField" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <item name="android:button">@drawable/none</item> <!-- just a null drawable - never shown -->
        <item name="android:drawableEnd">@drawable/checkbox</item>
        <item name="drawableTint">?colorPrimary</item> <!-- need to pull back into the material colors as drawable isn't tinted like the button -->
        <item name="android:textColor">@color/edit_text_color_selector</item>
        <item name="android:textAppearance">?android:textAppearanceMediumInverse</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">5dp</item>
        <item name="android:layout_marginEnd">5dp</item>
        <item name="android:layout_marginBottom">3dp</item>
        <item name="android:layout_marginTop">0dp</item>
    </style>

    <!-- password field visibility toggle button style -->
    <style name="Widget.CompoundButton.CheckBox.Visibility" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:button">@drawable/none</item> <!-- just a null drawable - never shown -->
        <item name="android:drawableEnd">@drawable/visibility_checkbox</item>
    </style>

    <!-- Accented Favorite (heart) icon style button -->
    <style name="Widget.CompoundButton.CheckBox.Favorite.Accented" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <item name="android:button">@drawable/favorite_checkbox</item> <!-- heart style icon -->
        <item name="buttonTint">?colorSecondary</item> <!-- color the button icon -->
    </style>

    <!-- icon only style button tinted in the accent color -->
    <style name="Widget.Button.OutlinedButton.IconOnly.Accented" parent="Widget.Button.OutlinedButton.IconOnly">
        <item name="iconTint">?colorSecondary</item>
    </style>

    <!-- icon only style button -->
    <style name="Widget.Button.OutlinedButton.IconOnly" parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_width">wrap_content</item>
        <item name="android:insetTop">0dp</item>
        <item name="android:insetBottom">0dp</item>
        <item name="android:paddingLeft">12dp</item>
        <item name="android:paddingRight">12dp</item>
        <item name="android:minWidth">48dp</item>
        <item name="android:minHeight">48dp</item>
        <item name="android:maxWidth">48dp</item>
        <item name="iconTint">?editTextColor</item> <!-- shows grayed if disabled -->
        <item name="android:layout_margin">5dp</item>
    </style>

    <style name="Custom.TextAppearance.MaterialComponents.Body1.Clickable" parent="TextAppearance.MaterialComponents.Body1">
        <item name="android:textColor">@color/clickable_text_color_selector</item>
    </style>

    <style name="Custom.TextAppearance.MaterialComponents.Body2.Clickable" parent="TextAppearance.MaterialComponents.Body2">
        <item name="android:textColor">@color/clickable_text_color_selector</item>
    </style>


    <!-- TODO think about whether I want to use this to tint all checkboxes in accent color -->
    <style name="App.Widget.CompoundButton.CheckBox" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <item name="android:textColor">@color/edit_text_color_selector</item>
        <item name="buttonTint">@color/checkbox_color_tint</item>
    </style>

    <!-- TODO probably not needed - check download dialog -->
    <style name="App.Widget.CompoundButton.RadioButton" parent="Widget.MaterialComponents.CompoundButton.RadioButton">
        <item name="android:textColor">@color/edit_text_color_selector</item>
        <!--<item name="buttonTint">@color/checkbox_color_tint</item>-->
    </style>

    <!-- TODO this is v specific - maybe just create a specific style for the item -->
    <style name="App.Widget.MaterialComponents.TextView.Clickable.Body1" parent="Widget.MaterialComponents.TextView">
        <item name="android:textAppearance">@style/Custom.TextAppearance.MaterialComponents.Body1.Clickable</item>
    </style>

    <!-- TODO this is v specific - maybe just create a specific style for the item -->
    <style name="App.Widget.MaterialComponents.TextView.Clickable.Body2" parent="Widget.MaterialComponents.TextView">
        <item name="android:textAppearance">@style/Custom.TextAppearance.MaterialComponents.Body2.Clickable</item>
    </style>

    <!-- style point for spinners across the app -->
    <style name="App.Widget.AppCompat.Spinner.Underlined" parent="Widget.AppCompat.Spinner.Underlined">
        <!--<item name="android:spinnerItemStyle">@style/App.Widget.AppCompat.TextView.SpinnerItem</item>
        <item name="android:paddingBottom">9dp</item>
        <item name="android:paddingTop">0dp</item>-->
    </style>

    <!-- spinners used on a page full of a list of input fields -->
    <style name="App.Widget.AppCompat.Spinner.Underlined.Field" parent="Widget.AppCompat.Spinner.Underlined">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">3dp</item>
        <item name="android:layout_marginEnd">5dp</item>

        <!--
        <item name="android:layout_marginBottom">3dp</item>
        <item name="android:layout_marginTop">7dp</item>-->
    </style>

    <!-- spinner / drop down lists - what is displayed when not expanded -->
    <style name="App.Widget.AppCompat.TextView.SpinnerItem" parent="Widget.AppCompat.TextView.SpinnerItem">
        <item name="android:textAppearance">?textAppearanceBody1</item>
        <item name="android:textColor">@color/edit_text_color_selector</item>
        <item name="android:paddingBottom">7dp</item>
    </style>
    <!-- items in the dropdown 'popup' when a spinner is clicked on -->
    <!--<style name="App.Widget.AppCompat.DropDownItem.Spinner" parent="Widget.AppCompat.DropDownItem.Spinner">
        &lt;!&ndash;<item name="android:background">@color/background_floating</item>
        <item name="android:textAppearance">?textAppearanceBody1</item>
        <item name="android:paddingTop">0dp</item>
        <item name="android:paddingBottom">0dp</item>
        <item name="android:spinnerItemStyle">@style/App.Widget.AppCompat.TextView.SpinnerItem</item>&ndash;&gt;
    </style>-->

    <!-- Allow change of the tab colors in the future perhaps -->
    <style name="App.Widget.MaterialComponents.TabLayout" parent="Widget.MaterialComponents.TabLayout">

    </style>

    <style name="App.Widget.MaterialComponents.CardView" parent="Widget.MaterialComponents.CardView">
    </style>

    <style name="App.Widget.Snackbar" parent="Widget.MaterialComponents.Snackbar">
        <!-- need this to be transparent to prevent corners showing with the theme background color -->
        <item name="android:theme">@style/ThemeOverlay.App.EditPages</item>
        <item name="android:background">@color/transparent</item>
        <item name="strokeWidth">0dp</item>
    </style>

    <style name="App.Widget.MaterialComponents.CompoundButton.Switch.Field" parent="Widget.MaterialComponents.CompoundButton.Switch">
        <!--<item name="android:textColor">?colorPrimaryVariant</item>-->
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">5dp</item>
        <item name="android:layout_marginEnd">5dp</item>
        <item name="android:layout_marginTop">0dp</item>
    </style>

    <style name="App.Widget.MaterialComponents.Toolbar" parent="Widget.MaterialComponents.Toolbar.Primary" >
    </style>

    <style name="ThemeOverlay.MaterialComponents.Toolbar.Primary" parent="">
        <item name="colorControlNormal">?attr/colorOnPrimary</item>
        <item name="actionMenuTextColor">?attr/colorOnPrimary</item>
    </style>

    <style name="App.Theme.PreferenceThemeOverlay.v14.Material" parent="PreferenceThemeOverlay.v14.Material">
    </style>

    <style name="App.Widget.MaterialComponents.AppBarLayout" parent="Widget.MaterialComponents.AppBarLayout.PrimarySurface">
    </style>


</resources>
